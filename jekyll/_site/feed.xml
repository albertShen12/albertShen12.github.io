<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description>千叶的个人主页</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 19 Mar 2019 18:57:09 +0800</pubDate>
    <lastBuildDate>Tue, 19 Mar 2019 18:57:09 +0800</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>webpack4学习（第四篇：常用插件）</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#albert&quot; id=&quot;markdown-toc-albert&quot;&gt;webpack4学习&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#目录&quot; id=&quot;markdown-toc-目录&quot;&gt;目录：&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;albert&quot;&gt;webpack4学习&lt;/h2&gt;

&lt;p&gt;webpack是前端构建项目最常用的工具，目前的前端项目除了angular之外，基本都是由webpack，或二次封装webpack的构建工具进行构建。&lt;/p&gt;

&lt;h4 id=&quot;目录&quot;&gt;目录：&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://albertshen12.github.io/2019/03/19/webpack4-1/&quot;&gt;webpack4学习（第一篇：基础）&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://albertshen12.github.io/2019/03/19/webpack4-2/&quot;&gt;webpack4学习（第二篇：dev模式与热更新）&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://albertshen12.github.io/2019/03/19/webpack4-3/&quot;&gt;webpack4学习（第三篇：静态文件）&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;webpack4学习（第四篇：常用插件）&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;待更新&lt;/p&gt;

</description>
        <pubDate>Tue, 19 Mar 2019 12:50:01 +0800</pubDate>
        <link>http://localhost:4000/2019/03/19/webpack4-4/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/03/19/webpack4-4/</guid>
        
        <category>webpack</category>
        
        
        <category>js</category>
        
      </item>
    
      <item>
        <title>webpack4学习（第三篇：静态文件）</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#albert&quot; id=&quot;markdown-toc-albert&quot;&gt;webpack4学习&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#目录&quot; id=&quot;markdown-toc-目录&quot;&gt;目录：&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;albert&quot;&gt;webpack4学习&lt;/h2&gt;

&lt;p&gt;webpack是前端构建项目最常用的工具，目前的前端项目除了angular之外，基本都是由webpack，或二次封装webpack的构建工具进行构建。&lt;/p&gt;

&lt;h4 id=&quot;目录&quot;&gt;目录：&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://albertshen12.github.io/2019/03/19/webpack4-1/&quot;&gt;webpack4学习（第一篇：基础）&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://albertshen12.github.io/2019/03/19/webpack4-2/&quot;&gt;webpack4学习（第二篇：dev模式与热更新）&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;webpack4学习（第三篇：静态文件）&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://albertshen12.github.io/2019/03/19/webpack4-4/&quot;&gt;webpack4学习（第四篇：常用插件）&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;待更新&lt;/p&gt;

</description>
        <pubDate>Tue, 19 Mar 2019 12:50:01 +0800</pubDate>
        <link>http://localhost:4000/2019/03/19/webpack4-3/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/03/19/webpack4-3/</guid>
        
        <category>webpack</category>
        
        
        <category>js</category>
        
      </item>
    
      <item>
        <title>webpack4学习（第二篇：dev模式与热更新）</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#albert&quot; id=&quot;markdown-toc-albert&quot;&gt;webpack4学习&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#目录&quot; id=&quot;markdown-toc-目录&quot;&gt;目录：&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;albert&quot;&gt;webpack4学习&lt;/h2&gt;

&lt;p&gt;webpack是前端构建项目最常用的工具，目前的前端项目除了angular之外，基本都是由webpack，或二次封装webpack的构建工具进行构建。&lt;/p&gt;

&lt;h4 id=&quot;目录&quot;&gt;目录：&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://albertshen12.github.io/2019/03/19/webpack4-1/&quot;&gt;webpack4学习（第一篇：基础）&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;webpack4学习（第二篇：dev模式与热更新）&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://albertshen12.github.io/2019/03/19/webpack4-3/&quot;&gt;webpack4学习（第三篇：静态文件）&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://albertshen12.github.io/2019/03/19/webpack4-4/&quot;&gt;webpack4学习（第四篇：常用插件）&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;待更新&lt;/p&gt;

</description>
        <pubDate>Tue, 19 Mar 2019 12:50:01 +0800</pubDate>
        <link>http://localhost:4000/2019/03/19/webpack4-2/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/03/19/webpack4-2/</guid>
        
        <category>webpack</category>
        
        
        <category>js</category>
        
      </item>
    
      <item>
        <title>webpack4学习（第一篇：基础）</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#albert&quot; id=&quot;markdown-toc-albert&quot;&gt;webpack4学习&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#目录&quot; id=&quot;markdown-toc-目录&quot;&gt;目录：&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#正文&quot; id=&quot;markdown-toc-正文&quot;&gt;正文：&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#动手尝试&quot; id=&quot;markdown-toc-动手尝试&quot;&gt;动手尝试：&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;albert&quot;&gt;webpack4学习&lt;/h2&gt;

&lt;p&gt;webpack是前端构建项目最常用的工具，目前的前端项目除了angular之外，基本都是由webpack，或二次封装webpack的构建工具进行构建。&lt;/p&gt;

&lt;h4 id=&quot;目录&quot;&gt;目录：&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;webpack4学习（第一篇：基础）&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://albertshen12.github.io/2019/03/19/webpack4-2/&quot;&gt;webpack4学习（第二篇：dev模式与热更新）&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://albertshen12.github.io/2019/03/19/webpack4-3/&quot;&gt;webpack4学习（第三篇：静态文件）&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://albertshen12.github.io/2019/03/19/webpack4-4/&quot;&gt;webpack4学习（第四篇：常用插件）&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;正文&quot;&gt;正文：&lt;/h4&gt;

&lt;p&gt;webpack的基础功能，在于将项目化的前端代码，打包成可运行的文件。在这个过程中，涉及了一些功能点：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;获取文件中依赖的其他文件打包到文件中（bundle）。&lt;/li&gt;
  &lt;li&gt;对各个类型的文件进行预处理（loader）。js文件需要将es6转化为原生js，scss/less文件需要编译成css等等&lt;/li&gt;
  &lt;li&gt;对各个类型的文件进行优化（loader）。例如去除js中冗余的代码，对css中的样式拓展浏览器支持，压缩文件大小&lt;/li&gt;
  &lt;li&gt;将项目文件进行拆分（chunk）。优化加载速度。例如分离公共库和业务代码，以及按路由懒加载。&lt;/li&gt;
  &lt;li&gt;通过某些插件简化一些其他的前端开发工作（plugin）。例如常见的webpack-html—plugin&lt;/li&gt;
  &lt;li&gt;以开发模式运行项目代码（devServer）。
除此之外，还有一些其他的功能。例如代码分析，服务器渲染等。&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;动手尝试&quot;&gt;动手尝试：&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;准备一个空白项目(需node，npm环境)
    &lt;ul&gt;
      &lt;li&gt;创建目录:       mkdir webpack4-react-demo &amp;amp; cd webpack4-react-demo&lt;/li&gt;
      &lt;li&gt;初始化package.json:    npm init&lt;/li&gt;
      &lt;li&gt;添加对应的webpack模块到项目中&lt;br /&gt;
  npm i –save-dev webpack@4.19.1 webpack-cli@2 webpack-dev-server@3&lt;br /&gt;
  npm i –save-dev babel-core@6 babel-loader@7 babel-preset-env babel-preset-react@6&lt;br /&gt;
  npm i –save-dev html-loader html-webpack-plugin@3&lt;br /&gt;
  npm i –save react@16 react-dom@16&lt;/li&gt;
      &lt;li&gt;新建index.html文件,内容:&lt;br /&gt;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;br /&gt;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;br /&gt;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;head&amp;gt;&lt;/code&gt;&lt;br /&gt;
      &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;&lt;/code&gt;&lt;br /&gt;
      &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;title&amp;gt;React&amp;lt;/title&amp;gt;&lt;/code&gt;&lt;br /&gt;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;/head&amp;gt;&lt;/code&gt;&lt;br /&gt;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;body&amp;gt;&lt;/code&gt;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;div id=&quot;app&quot;&amp;gt;&lt;/code&gt;&lt;br /&gt;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;br /&gt;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;/body&amp;gt;&lt;/code&gt;&lt;br /&gt;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;新建.babelrc文件,内容:&lt;br /&gt;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;{&lt;/code&gt;&lt;br /&gt;
      &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;presets&quot;: [&quot;env&quot;, &quot;react&quot;]&lt;/code&gt;&lt;br /&gt;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;创建src目录，并新建App.js,内容：&lt;/p&gt;

        &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;import React from &quot;react&quot;;&lt;/code&gt;&lt;/p&gt;

        &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;const App = () =&amp;gt; {&lt;/code&gt;&lt;br /&gt;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;return (&lt;/code&gt;&lt;br /&gt;
      &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;br /&gt;
          &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;p&amp;gt;hello world!&amp;lt;/p&amp;gt;&lt;/code&gt;&lt;br /&gt;
      &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;br /&gt;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;);&lt;/code&gt;&lt;br /&gt;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;};&lt;/code&gt;&lt;br /&gt;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;export default App;&lt;/code&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;src目录下，继续新建index.js,内容：&lt;/p&gt;

        &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;import App from &quot;./App&quot;;&lt;/code&gt;&lt;br /&gt;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;import React from &quot;react&quot;;&lt;/code&gt;&lt;br /&gt;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;import ReactDOM from &quot;react-dom&quot;;&lt;/code&gt;&lt;br /&gt;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;ReactDOM.render(&amp;lt;App/&amp;gt;, document.getElementById(&quot;app&quot;));&lt;/code&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;创建build目录,并新建webpack.config.js文件,内容:
  &lt;code class=&quot;highlighter-rouge&quot;&gt;const HtmlWebPackPlugin = require(&quot;html-webpack-plugin&quot;);&lt;/code&gt;&lt;br /&gt;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;const path = require('path');&lt;/code&gt;&lt;/p&gt;

        &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;module.exports = {&lt;/code&gt;&lt;br /&gt;
      &lt;code class=&quot;highlighter-rouge&quot;&gt;entry: './src/index.js',    // 入口&lt;/code&gt;&lt;br /&gt;
      &lt;code class=&quot;highlighter-rouge&quot;&gt;context: path.resolve(__dirname,'../'),&lt;/code&gt;&lt;br /&gt;
      &lt;code class=&quot;highlighter-rouge&quot;&gt;module: {&lt;/code&gt;&lt;br /&gt;
          &lt;code class=&quot;highlighter-rouge&quot;&gt;rules: [&lt;/code&gt;&lt;br /&gt;
              &lt;code class=&quot;highlighter-rouge&quot;&gt;{&lt;/code&gt;&lt;br /&gt;
                  &lt;code class=&quot;highlighter-rouge&quot;&gt;test: /\.js$/,&lt;/code&gt;&lt;br /&gt;
                  &lt;code class=&quot;highlighter-rouge&quot;&gt;exclude: /node_modules/,&lt;/code&gt;&lt;br /&gt;
                  &lt;code class=&quot;highlighter-rouge&quot;&gt;use: {&lt;/code&gt;&lt;br /&gt;
                      &lt;code class=&quot;highlighter-rouge&quot;&gt;loader: &quot;babel-loader&quot;&lt;/code&gt;&lt;br /&gt;
                  &lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;br /&gt;
              &lt;code class=&quot;highlighter-rouge&quot;&gt;},&lt;/code&gt;&lt;br /&gt;
              &lt;code class=&quot;highlighter-rouge&quot;&gt;{&lt;/code&gt;&lt;br /&gt;
                  &lt;code class=&quot;highlighter-rouge&quot;&gt;test: /\.html$/,&lt;/code&gt;&lt;br /&gt;
                  &lt;code class=&quot;highlighter-rouge&quot;&gt;use: [&lt;/code&gt;&lt;br /&gt;
                      &lt;code class=&quot;highlighter-rouge&quot;&gt;{&lt;/code&gt;&lt;br /&gt;
                          &lt;code class=&quot;highlighter-rouge&quot;&gt;loader: &quot;html-loader&quot;,&lt;/code&gt;&lt;br /&gt;
                          &lt;code class=&quot;highlighter-rouge&quot;&gt;options: {minimize: true}&lt;/code&gt;&lt;br /&gt;
                      &lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;br /&gt;
                  &lt;code class=&quot;highlighter-rouge&quot;&gt;]&lt;/code&gt;&lt;br /&gt;
              &lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;br /&gt;
          &lt;code class=&quot;highlighter-rouge&quot;&gt;]&lt;/code&gt;&lt;br /&gt;
      &lt;code class=&quot;highlighter-rouge&quot;&gt;},&lt;/code&gt;&lt;br /&gt;
      &lt;code class=&quot;highlighter-rouge&quot;&gt;plugins: [&lt;/code&gt;&lt;br /&gt;
          &lt;code class=&quot;highlighter-rouge&quot;&gt;new HtmlWebPackPlugin({&lt;/code&gt;&lt;br /&gt;
              &lt;code class=&quot;highlighter-rouge&quot;&gt;template: &quot;./index.html&quot;,&lt;/code&gt;&lt;br /&gt;
              &lt;code class=&quot;highlighter-rouge&quot;&gt;filename: &quot;./index.html&quot;&lt;/code&gt;&lt;br /&gt;
          &lt;code class=&quot;highlighter-rouge&quot;&gt;})&lt;/code&gt;&lt;br /&gt;
      &lt;code class=&quot;highlighter-rouge&quot;&gt;]&lt;/code&gt;&lt;br /&gt;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;};&lt;/code&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;package.json添加script指令:
  &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;dev&quot;: &quot;webpack-dev-server --config build/webpack.config.js --mode development --open&quot;&lt;/code&gt;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;build&quot;: &quot;webpack --config build/webpack.config.js --mode production&quot;&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Tue, 19 Mar 2019 12:50:01 +0800</pubDate>
        <link>http://localhost:4000/2019/03/19/webpack4-1/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/03/19/webpack4-1/</guid>
        
        <category>webpack</category>
        
        
        <category>js</category>
        
      </item>
    
      <item>
        <title>学习antd-theme</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#zhugeliang&quot; id=&quot;markdown-toc-zhugeliang&quot;&gt;antd-theme&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#antd的样式采用less语言并向开发者提供了两个功能&quot; id=&quot;markdown-toc-antd的样式采用less语言并向开发者提供了两个功能&quot;&gt;antd的样式采用less语言，并向开发者提供了两个功能：&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;zhugeliang&quot;&gt;antd-theme&lt;/h2&gt;

&lt;h4 id=&quot;antd的样式采用less语言并向开发者提供了两个功能&quot;&gt;antd的样式采用less语言，并向开发者提供了两个功能：&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;按需加载组件样式&lt;/li&gt;
  &lt;li&gt;自定义主题&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;按需加载组件样式，通过webpack中配置对应的插件即可。而自定义主题的应用，则需要了解更多的细节。&lt;/p&gt;

&lt;p&gt;首先，要知道antd中一共有多少可定义的参数。&lt;br /&gt;
引用自官网：&lt;a href=&quot;https://ant.design/docs/react/customize-theme-cn&quot;&gt;antd定制主题&lt;/a&gt;&lt;br /&gt;
@primary-color: #1890ff;                         // 全局主色&lt;br /&gt;
@link-color: #1890ff;                            // 链接色&lt;br /&gt;
@success-color: #52c41a;                         // 成功色&lt;br /&gt;
@warning-color: #faad14;                         // 警告色&lt;br /&gt;
@error-color: #f5222d;                           // 错误色&lt;br /&gt;
@font-size-base: 14px;                           // 主字号&lt;br /&gt;
@heading-color: rgba(0, 0, 0, .85);              // 标题色&lt;br /&gt;
@text-color: rgba(0, 0, 0, .65);                 // 主文本色&lt;br /&gt;
@text-color-secondary : rgba(0, 0, 0, .45);      // 次文本色&lt;br /&gt;
@disabled-color : rgba(0, 0, 0, .25);            // 失效色&lt;br /&gt;
@border-radius-base: 4px;                        // 组件/浮层圆角&lt;br /&gt;
@border-color-base: #d9d9d9;                     // 边框色&lt;br /&gt;
@box-shadow-base: 0 2px 8px rgba(0, 0, 0, .15);  // 浮层阴影&lt;/p&gt;

&lt;p&gt;接着，就是如果定制。&lt;br /&gt;
一，通过webpack配置：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// webpack.config.js
module.exports = {
  rules: [{
    test: /\.less$/,
    use: [{
      loader: 'style-loader',
    }, {
      loader: 'css-loader', // translates CSS into CommonJS
    }, {
      loader: 'less-loader', // compiles Less to CSS
+     options: {
+       modifyVars: {
+         'primary-color': '#1DA57A',
+         'link-color': '#1DA57A',
+         'border-radius-base': '2px',
+       },
+       javascriptEnabled: true,
+     },
    }],
    // ...other rules
  }],
  // ...other config
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;二，通过less文件覆盖：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@import &quot;~antd/dist/antd.less&quot;;   // 引入官方提供的 less 样式入口文件
@import &quot;your-theme-file.less&quot;;   // 用于覆盖上面定义的变量
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;但这两种，都是在打包阶段完成的主题自定义。我们还会面对主题切换的需求。
可以通过以下方式完成：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;在项目中引入less.js&lt;/li&gt;
  &lt;li&gt;在html文件中放置一个color.less文件位于其他css文件下&lt;/li&gt;
  &lt;li&gt;点击主题切换时，调用 less.modifyVars()修改color.less中包含的变量。&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Fri, 01 Feb 2019 13:31:01 +0800</pubDate>
        <link>http://localhost:4000/2019/02/01/antd-theme/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/02/01/antd-theme/</guid>
        
        <category>antd</category>
        
        
        <category>css</category>
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#zhugeliang&quot; id=&quot;markdown-toc-zhugeliang&quot;&gt;诫子书&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;First POST build by Jekyll.&lt;/p&gt;

&lt;h2 id=&quot;zhugeliang&quot;&gt;诫子书&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/jiezishu.jpg&quot; alt=&quot;诫子书&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#&quot;&gt;诸葛亮&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;夫君子之行，静以修身，俭以养德。非淡泊(澹泊)无以明志，非宁静无以致远。夫学须静也，才须学也。非学无以广才，非志无以成学。淫慢则不能励精，险躁则不能冶性。
年与时驰，意与日去，遂成枯落，多不接世，悲守穷庐，将复何及！&lt;/p&gt;

</description>
        <pubDate>Wed, 26 Dec 2018 13:31:01 +0800</pubDate>
        <link>http://localhost:4000/2018/12/26/welcome-to-jekyll/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/12/26/welcome-to-jekyll/</guid>
        
        <category>jekyll</category>
        
        
        <category>jekyll</category>
        
      </item>
    
  </channel>
</rss>
